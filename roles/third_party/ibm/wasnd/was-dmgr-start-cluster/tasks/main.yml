---
- name:                 "Verifiy if Profile already exists"
  stat:
    path:               "{{ __was_install_location }}/profiles/{{ __profile_name }}"
  register:             profile_already_exists

- name:                 Use small topology names
  set_fact:
    __cluster_name:     "{{ __small_topology }}"
  when:
    - __cnx_deploy_type == "small"

- name:                 Use medium topology names
  set_fact:
    __cluster_name:     "{{ __medium_topology }}"
  when:
    - __cnx_deploy_type == "medium"

- name:                 Use large topology names
  set_fact:
    __cluster_name:     "{{ __large_topology }}"
  when:
    - __cnx_deploy_type == "large"

- name:                 "Generate Response file {{ __rsp_file }}"
  template:
    src:                "{{ __tpl_file }}"
    dest:               "{{ __rsp_file }}"
  when:                 pool_server is not defined

- name:                 "Executing {{ __bin_dir }}/wsadmin.sh -lang jython -port {{ __dmgr_soap_port }} -username {{ __was_username }} -password {{ __was_password }} -f {{ __rsp_file }} {{ __cluster_name }}"
  command:
    chdir={{ __bin_dir }}
    {{ __bin_dir }}/wsadmin.sh -lang jython -port {{ __dmgr_soap_port }} -username {{ __was_username }} -password {{ __was_password }} -f {{ __rsp_file }} {{ __cluster_name }}
  register:             cout
  changed_when:         cout.rc == 0
  retries: 3
  delay: 30
  until: cout is not search("is already in progress")
  when:                 pool_server is not defined

- name:                 Verify if pid file (pool server)
  stat:
    path:               "{{ __was_install_location }}/profiles/{{ __profile_name }}/logs/{{ __cluster_name }}/{{ __cluster_name }}.pid"
  register:             server_is_running
  ignore_errors:        true
  when:                 pool_server is defined

- name:                 "Executing {{ __bin_dir }}/startServer.sh {{ __cluster_name }} (pool server)"
  command:
    chdir={{ __bin_dir }}
    {{ __bin_dir }}/startServer.sh {{ __cluster_name }}
  when:                 pool_server is defined and not server_is_running.stat.exists
