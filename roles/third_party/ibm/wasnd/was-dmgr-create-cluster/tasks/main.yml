---
- name:                 "Verify if Profile already exists"
  stat:
    path:               "{{ __was_install_location }}/profiles/{{ __profile_name }}"
  register:             profile_already_exists

- name:                 "Verify if Dmgr is running"
  shell:                ps -p `cat "{{ __was_install_location }}/profiles/{{ __profile_name }}/logs/dmgr/dmgr.pid"`
  register:             dmgr_is_running
  ignore_errors:        true

- name:                 "Verify if {{ __cluster_name }} cluster is already created"
  stat:
    path:               "{{ __success_file }}"
  register:             cluster_already_configured
  when:                 profile_already_exists.stat.exists |bool

- name:                 "Generate Response file"
  template:
    src:                "{{ __tpl_file }}"
    dest:               "{{ __rsp_file }}"
  when:                 not cluster_already_configured.stat.exists

- name:                 "Configure Cluster"
  command:
    chdir={{ __bin_dir }}
    {{ __bin_dir }}/wsadmin.sh -lang jython -port {{ __dmgr_soap_port }} -username {{ __was_username }} -password {{ __was_password }} -f {{ __rsp_file }}
  register:             cout
  changed_when:         cout.rc == 0
  when:                 not cluster_already_configured.stat.exists

- name:                 "Create .success file"
  file:
    path:               "{{ __success_file }}"
    state:              touch
