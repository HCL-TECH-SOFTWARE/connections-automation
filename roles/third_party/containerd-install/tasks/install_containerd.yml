---
- name:                     Show me Linux distribution
  debug:
    msg:                    "{{ ansible_distribution }}"

- name:                     Show me Linux distribution major version
  debug:
    msg:                    "{{ ansible_distribution_major_version }}"

- name:                     Show me Linux distribution version
  debug:
    msg:                    "{{ ansible_distribution_version }}"

- name:                     Add Docker repo
  get_url:
    url:                    https://download.docker.com/linux/centos/docker-ce.repo
    dest:                   /etc/yum.repos.d/docker-ce.repo

- name:                     Replace baseurl on RedHat {{ ansible_distribution_major_version }}
  replace:
    path:                   /etc/yum.repos.d/docker-ce.repo
    regexp:                 '^baseurl.*$'
    replace:                'baseurl=https://download.docker.com/linux/centos/{{ ansible_distribution_major_version }}/x86_64/stable'
  when:
    - ansible_os_family == "RedHat"

- name:                     Enable Docker stable repo
  ini_file:
    dest:                   /etc/yum.repos.d/docker-ce.repo
    section:                'docker-ce-stable'
    option:                 enabled
    value:                  1

- name:                     Disable Docker Edge repo
  ini_file:
    dest:                   /etc/yum.repos.d/docker-ce.repo
    section:                'docker-ce-edge'
    option:                 enabled
    value:                  0

- name:                     Disable Docker Test repo
  ini_file:
    dest:                   /etc/yum.repos.d/docker-ce.repo
    section:                'docker-ce-test'
    option:                 enabled
    value:                  0

- name:                     Install containerd.io {{ __containerd_version }}
  package:
    name:                   containerd.io-{{ __containerd_version }}
    state:                  present
    allow_downgrade:        yes
  when:
    - ansible_os_family == "RedHat"

- name:                     Create containerd folders
  file:
    path:                   "/etc/containerd"
    state:                  directory

- name:                     Configure containerd
  shell:                    containerd config default > /etc/containerd/config.toml

- name:                     Create registry host directory to configure docker.io mirror
  file:                     path=/etc/containerd/certs.d/docker.io state=directory mode=0644
  when:                     containerd_docker_mirror is defined

- name:                     "Add {{ containerd_docker_mirror }} as docker mirror to hosts.toml"
  copy:
    dest:                   /etc/containerd/certs.d/docker.io/hosts.toml
    content: |
          server = "https://docker.io"

          [host."https://{{ containerd_docker_mirror }}"]
            capabilities = ["pull", "resolve"]
  when:                     containerd_docker_mirror is defined

- name:                     Configure mirror file in config.toml
  replace:
    path:                   "/etc/containerd/config.toml"
    regexp:                 '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.registry\][^\n]*\n\s*config_path = ""'
    replace: |
      [plugins."io.containerd.grpc.v1.cri".registry]
        config_path = "/etc/containerd/certs.d"
    backup:                 yes
  when:                     containerd_docker_mirror is defined

- name:                     Configure containerd to set SystemdCgroup true
  replace:
    path:                   "/etc/containerd/config.toml"
    regexp:                 ".*SystemdCgroup\\ \\=\\ false"
    replace: |2
                      SystemdCgroup = true

- name:                     Use systemd as cgroup driver
  replace:
    path:                   /etc/containerd/config.toml
    regexp:                 'systemd_cgroup.=.*$'
    replace:                'systemd_cgroup = true'
  when:
   - ansible_facts['distribution'] in ['RedHat', 'AlmaLinux', 'Rocky']
   - ansible_distribution_major_version == "7"

- name:                     Restart containerd
  service:
    name:                   containerd
    state:                  started
    enabled:                yes
    daemon_reload:          yes
