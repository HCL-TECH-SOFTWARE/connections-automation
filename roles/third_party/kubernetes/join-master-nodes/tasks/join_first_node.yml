- name:                  Show me how it should look like
  debug:
    msg:                 "kubectl exec -n kube-system etcd-{{ hostvars[groups['k8s_masters'][0]]['inventory_hostname'] }} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:2379 member add {{ hostvars[groups['k8s_masters'][1]]['inventory_hostname'] }} https://{{ hostvars[groups['k8s_masters'][1]]['ansible_default_ipv4']['address'] }}:2380"
  when:                  inventory_hostname == groups['k8s_masters'][1]

- name:                  Check if second master has already joined the cluster
  stat:
    path:                "{{ __etcd_second_node_clustering_success_file }}"
  register:              etcd_second_node_already_joined
  when:                  inventory_hostname == groups['k8s_masters'][1]

- name:                  Join first node to cluster
  command:               "{{ item }}"
  when:                  inventory_hostname == groups['k8s_masters'][1] and not etcd_second_node_already_joined.stat.exists
  with_items:
   - "kubeadm alpha phase certs all --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase kubelet config write-to-disk --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase kubelet write-env-file --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase kubeconfig kubelet --config /tmp/kubeadm-config.yaml"

- name:                  Enable and start kubelet
  service:
    name:                kubelet
    state:               restarted
    daemon_reload:       yes
  when:                  inventory_hostname == groups['k8s_masters'][1] and not etcd_second_node_already_joined.stat.exists

- name:                  Waiting for cluster to be ready again
  pause:
    seconds:             15

- name:                  Join me to the etcd cluster
  command:               "{{ item }}"
  when:                  inventory_hostname == groups['k8s_masters'][1] and not etcd_second_node_already_joined.stat.exists
  with_items:
   - "kubectl exec -n kube-system etcd-{{ hostvars[groups['k8s_masters'][0]]['inventory_hostname'] }} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:2379 member add {{ hostvars[groups['k8s_masters'][1]]['inventory_hostname'] }} https://{{ hostvars[groups['k8s_masters'][1]]['ansible_default_ipv4']['address'] }}:2380"
  become:                false

- name:                  Waiting for etcd to be available again
  pause:
    minutes:             1

- name:                  Finish etcd config and deploy control plane
  command:               "{{ item }}"
  when:                  inventory_hostname == groups['k8s_masters'][1] and not etcd_second_node_already_joined.stat.exists
  with_items:
   - "kubeadm alpha phase etcd local --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase kubeconfig all --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase controlplane all --config /tmp/kubeadm-config.yaml"
   - "kubeadm alpha phase mark-master --config /tmp/kubeadm-config.yaml"

- name:                  Create {{ __etcd_second_node_clustering_success_file }} file
  file:
    path:                "{{ __etcd_second_node_clustering_success_file }}"
    state:               touch
  when:                  inventory_hostname == groups['k8s_masters'][1]
