- name:               Check if "{{ inventory_hostname }}" is already part of the cluster as master and in Ready status
  shell:              kubectl get nodes | grep "{{ inventory_hostname }}" | grep master | grep Ready
  changed_when:       true
  register:           master_already_initialized
  when:
    - inventory_hostname == groups['k8s_masters'][0]
  become:             false
  ignore_errors:      true

- name:               Generate certificate key
  command:            kubeadm alpha certs certificate-key
  register:           master_certificate_key_json
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true

- name:               Show me master_certificate_key_json
  debug:
    msg:              "{{ master_certificate_key_json }}"
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
  ignore_errors:      true

- name:               Show me master_certificate_key_json.stdout
  debug:
    msg:              "{{ master_certificate_key_json.stdout }}"
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
  ignore_errors:      true

- name:               Save master certificate key
  template:
    src:              "{{ __master_certkey_template }}"
    dest:             "{{ __master_certkey_location }}"
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true

- name:               Read the certificate key and save it to the variable
  slurp:
    src:              "{{ __master_certkey_location }}"
  register:           master_certificate_key
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true

- name:               Show me master_certificate_key
  debug:
    msg:              "{{ master_certificate_key.content | b64decode | replace('\n', '') }}"
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
  ignore_errors:      true

- name:               Initialize master for single node installation
  command:            kubeadm init --config={{ __kubeadm_config_location }}
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) == true

- name:               Initialize master for HA with load balancer dns
  command:            kubeadm init --control-plane-endpoint "{{ __load_balancer_dns  }}:6443" --pod-network-cidr "{{ __pod_subnet }}" --upload-certs --certificate-key {{ master_certificate_key.content | b64decode | replace('\n', '') }}
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
    - not( __load_balancer_dns is regex("elb.amazonaws.com"))

- name:               Initialize master for HA with application load balancer
  command:            kubeadm init --pod-network-cidr "{{ __pod_subnet }}" --upload-certs --certificate-key {{ master_certificate_key.content | b64decode | replace('\n', '') }}
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - master_already_initialized.rc != 0
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
    - __load_balancer_dns is regex("elb.amazonaws.com")

- name:               Generate join command
  command:            kubeadm token create --print-join-command
  register:           join_command
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - ((groups.k8s_workers | difference(groups.k8s_masters) | list)== []  and (groups.k8s_masters|length) == 1 and (groups.k8s_workers|length) == 1 ) != true
