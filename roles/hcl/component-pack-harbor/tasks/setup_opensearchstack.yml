- name:                      "Render {{ __opensearchstack_env }}"
  template:
    src:                     "helmvars/opensearchstack.yml.j2"
    dest:                    "{{ __opensearchstack_env }}"
  become_user:               "{{ __sudo_user }}"

- name:                      Get chart and version
  shell:                     "cat {{ __ansible_cache_charts }}/helm_repo_version_list | grep opensearchstack | cut -d ':' -f2"
  register:                  opensearchstack_chart_version
  become_user:               "{{ __sudo_user }}"

- name:                      Found OpenSearch Stack chart version
  debug:
    msg:                     "{{ opensearchstack_chart_version.stdout }}"

- name:                      Record OpenSearch Stack chart version
  local_action:
    module:                  shell
    cmd:                     echo "opensearchstack chart = {{ opensearchstack_chart_version.stdout }}" >> "{{ __cp_versions_file }}"
  become:                    false
  when:                      __record_cp_versions|bool

- name:                      Upgrade OpenSearch Stack
  command:                   "helm upgrade opensearchstack {{ __helm_repository_local_name }}/opensearchstack -i --version {{ opensearchstack_chart_version.stdout }} -f {{ __opensearchstack_env }} --namespace {{ __default_namespace }} --wait"
  become_user:               "{{ __sudo_user }}"

- name:                      Check if opensearch-dashboards deployment is ready
  shell:                     "kubectl -n {{ __default_namespace }} rollout status deploy $(kubectl -n {{ __default_namespace }} get deploy | grep opensearch-dashboards | grep -vE NAME | awk '{print $1}') --timeout=300s"
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if filebeat daemonSet is ready
  shell:                     "kubectl -n {{ __default_namespace }} rollout status ds $(kubectl -n {{ __default_namespace }} get ds | grep filebeat | grep -vE NAME | awk '{print $1}') --timeout=300s"
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if logstash statefulset is ready
  shell:                     "kubectl -n {{ __default_namespace }} rollout status sts $(kubectl -n {{ __default_namespace }} get sts | grep logstash | grep -vE NAME | awk '{print $1}') --timeout=300s"
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Finding OpensSearch-Dashboard link
  debug:
    msg:                     "You can reach your opensearch-dashboard instance here: https://{{ __frontend_fqdn }}/dashboards"
