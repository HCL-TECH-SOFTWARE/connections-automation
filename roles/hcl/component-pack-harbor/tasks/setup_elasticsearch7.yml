- name:                      "Render {{ __elasticsearch_env }}"
  template:
    src:                     "helmvars/elasticsearch.yml.j2"
    dest:                    "{{ __elasticsearch_env }}"
  become_user:               "{{ __sudo_user }}"

- name:                      Get chart and version
  shell:                     "helm search repo {{ __helm_repository_local_name }} {{ __helm_repo_flag }} | grep elasticsearch7 | grep -v curator | awk {'print $2'}"
  register:                  elasticsearch7_chart_version
  become_user:               "{{ __sudo_user }}"

- name:                      Found elasticsearch7 chart version
  debug:
    msg:                     "{{ elasticsearch7_chart_version.stdout }}"

- name:                      Record elasticsearch7 chart version
  local_action:
    module:                  shell
    cmd:                     echo "elasticsearch7 chart = {{ elasticsearch7_chart_version.stdout }}" >> "{{ __cp_versions_file }}"
  become:                    false
  when:                      __record_cp_versions|bool

- name:                      Upgrade elasticsearch7
  command:                   "helm upgrade elasticsearch7 {{ __helm_repository_local_name }}/elasticsearch7 -i --version {{ elasticsearch7_chart_version.stdout }} -f {{ __elasticsearch_env }} --namespace {{ __default_namespace }} --set common.probe.readinessProbe.timeoutSeconds=60 --wait --timeout 10m"
  become_user:               "{{ __sudo_user }}"

- name:                      Check if elasticsearch master is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i es-master-7 | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"

- name:                      Check if elasticsearch data is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i es-data-7 | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"

- name:                      Check if elasticsearch client is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i es-client-7 | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"

- name:                      Remove Master eligible nodes using voting configuration to support scaling down
  shell:                     kubectl exec es-master-7-0 -n "{{ __default_namespace }}" -- bash -c "probe/sendRequest.sh --to-master POST /_cluster/voting_config_exclusions?node_names=es-master-7-2,es-master-7-1"
  become_user:               "{{ __sudo_user }}"
