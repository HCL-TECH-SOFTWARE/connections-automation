- name:                       Check if namespace {{ __default_namespace }} is already created
  shell:                      kubectl get namespace | grep {{ __default_namespace }}
  changed_when:               true
  register:                   connections_created
  become_user:                "{{ __sudo_user }}"
  ignore_errors:              true

- name:                       Create namespace
  command:                    kubectl create namespace {{ __default_namespace }}
  when:                       connections_created.rc != 0
  become_user:                "{{ __sudo_user }}"

- name:                       Applying Pod Security Admission policy to the '{{ __default_namespace }}' namespace when kuberntes version >= 1.25. Current version is {{ __kubernetes_version }}
  command:                    kubectl label --overwrite ns {{ __default_namespace }} pod-security.kubernetes.io/enforce=baseline pod-security.kubernetes.io/enforce-version=latest pod-security.kubernetes.io/warn=baseline pod-security.kubernetes.io/warn-version=latest pod-security.kubernetes.io/audit=baseline pod-security.kubernetes.io/audit-version=latest
  when:                       __kubernetes_version is version_compare('1.25', '>=')
  become_user:                "{{ __sudo_user }}"

- name:                       Delete credentials, to enable recreating it
  command:                    kubectl delete secret {{ __credentials_name }} -n {{ __default_namespace }}
  become_user:                "{{ __sudo_user }}"
  ignore_errors:              true
  when:                       pool_server is not defined

- name:                       Setup credentials for private Docker Repository
  command:                    kubectl create secret docker-registry {{ __credentials_name }} -n {{ __default_namespace }} --docker-server={{ __docker_registry_url }} --docker-username={{ __docker_registry_username }} --docker-password {{ __docker_registry_password }}
  become_user:                "{{ __sudo_user }}"
  when:                       pool_server is not defined
