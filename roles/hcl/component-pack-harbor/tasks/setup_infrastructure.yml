- name:                      Get chart and version harbor OCI
  shell:                     "helm show all {{ __oci_helm_repository }}/infrastructure --devel | grep -oP '^version:\\s*\\K[^ ]+'"
  register:                  infrastructure_chart_version
  become_user:               "{{ __sudo_user }}"

- name:                      Found infrastructure chart version
  debug:
    msg:                     "{{ infrastructure_chart_version.stdout }}"

- name:                      Record infrastructure chart version
  local_action:
    module:                  shell
    cmd:                     echo "infrastructure chart = {{ infrastructure_chart_version.stdout }}" >> "{{ __cp_versions_file }}"
  become:                    false
  when:                      __record_cp_versions|bool

- name:                      "Render {{ __infrastructure_env }}"
  template:
    src:                     "helmvars/infrastructure.yml.j2"
    dest:                    "{{ __infrastructure_env }}"
  become_user:               "{{ __sudo_user }}"

- name:                      Upgrade infrastructure
  command:                   "helm upgrade infrastructure {{ __helm_repository_local_name }}/infrastructure -i --version {{ infrastructure_chart_version.stdout }} -f {{ __infrastructure_env }} --namespace {{ __default_namespace }}"
  become_user:               "{{ __sudo_user }}"

- name:                      Wait for mongo5 to come up
  shell:                     kubectl wait --namespace {{ __default_namespace }} --for=condition=ready pod --selector=role=mongo5 --timeout=300s
  when:                      __setup_mongo5|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Wait for mongo7 to come up
  shell:                     kubectl wait --namespace {{ __default_namespace }} --for=condition=ready pod --selector=role=mongo7 --timeout=300s
  when:                      __setup_mongo7|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if appregistry-client is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i appregistry-client | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if appregistry-service is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i appregistry-service | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if haproxy is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i haproxy | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if mongo5 is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i mongo5 | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool and __setup_mongo5|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if mongo7 is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i mongo7 | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool and __setup_mongo7|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if redis-sentinel is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i redis-sentinel | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"

- name:                      Check if redis-server is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i redis-server | grep -i Running
  changed_when:              true
  when:                      not __skip_pod_checks|bool
  become_user:               "{{ __sudo_user }}"
