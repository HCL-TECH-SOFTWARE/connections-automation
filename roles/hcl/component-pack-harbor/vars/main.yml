---
__kubernetes_version:                        "{{ kubernetes_version | default('1.27.0') }}"
__python_path:                               "{{ python_path | default('/usr/bin/python3') }}"
__ansible_cache:                             "/tmp/k8s_ansible"
__sudo_user:                                 "{{ kubectl_user | default( ansible_env['SUDO_USER'] ) }}"
__ansible_cache_charts:                      "/home/{{ __sudo_user }}/generated_charts"
__cnx_major_version:                         "{{ cnx_major_version | default('8') }}"
__cp_versions_file:                          "{{ cp_versions_file | default( inventory_dir ) }}/cp_versions.txt"
__record_cp_versions:                        "{{ record_cp_versions | default(false) }}"

__enable_pod_auto_scaling:                   "{{ enable_pod_auto_scaling | default(true) |lower }}"

__skip_connections_integration:              "{{ skip_connections_integration | default(false) }}"

__helm_repository:                           "{{ component_pack_helm_repository | default('https://hclcr.io/chartrepo/cnx') }}"
__helm_repository_local_name:                "{{ helm_repository_local_name | default('v-connections-helm' ) }}"
__helm_repo_username:                        "{{ docker_registry_username | default('icdeploy') }}"
__helm_repo_password:                        "{{ docker_registry_password | default('sometoken') }}"
__helm_repo_flag:                            "--devel"

__setup_installation:                        "{{ setup_installation | default(true) |lower }}"
__setup_credentials:                         "{{ setup_credentials | default(true) |lower }}"
__setup_connections_volumes:                 "{{ setup_connections_volumes | default(true) |lower }}"
__setup_psp:                                 "{{ setup_psp | default(true) |lower }}"
__setup_bootstrap:                           "{{ setup_bootstrap | default(true) |lower }}"
__setup_connections_env:                     "{{ setup_connections_env | default(true) |lower }}"
__setup_infrastructure:                      "{{ setup_infrastructure | default(true) |lower }}"
__setup_customizer:                          "{{ setup_customizer | default(true) |lower }}"
__setup_elasticsearch:                       "{{ setup_elasticsearch | default(false) |lower }}"
__setup_elasticsearch7:                      "{{ setup_elasticsearch7 | default(false) |lower }}"
__setup_ingress:                             "{{ setup_ingress | default(false) |lower }}"
__setup_community_ingress:                   "{{ setup_community_ingress | default(true) |lower }}"
__setup_teams:                               "{{ setup_teams | default(true) |lower }}"
__setup_tailored_exp:                        "{{ setup_tailored_exp | default(true) |lower }}"
__setup_orientme:                            "{{ setup_orientme | default(true) |lower }}"
__setup_sanity:                              "{{ setup_sanity | default(false) |lower }}"
__setup_kudosboards:                         "{{ setup_kudosboards | default(true) |lower }}"
__setup_huddoboards:                         "{{ setup_huddoboards | default(__setup_kudosboards) }}"
__setup_elasticstack:                        "{{ setup_elasticstack | default(false) |lower }}"
__setup_elasticstack7:                       "{{ setup_elasticstack7 | default(false) |lower }}"
__setup_outlook_addin:                       "{{ setup_outlook_addin | default(true) |lower }}"
__enable_es_metrics:                         "{{ enable_es_metrics | default(true) |lower }}"
__enable_gk_flags:                           "{{ enable_gk_flags | default(true) |lower }}"
__setup_ms_teams_extensions:                 "{{ setup_ms_teams_extensions | default(true) |lower }}"

__replica_count:                             "{{ cp_replica_count | default(1) }}"

__docker_registry_url:                       "{{ docker_registry_url | default('hclcr.io/cnx') }}"
__docker_registry_username:                  "{{ docker_registry_username | default('admin') }}"
__docker_registry_password:                  "{{ docker_registry_password | default('password') }}"

__huddoboards_registry_url:                  "{{ huddoboards_registry_url | default('quay.io/huddo') }}"
__huddoboards_registry_username:             "{{ huddoboards_registry_username | default('admin') }}"
__huddoboards_registry_password:             "{{ huddoboards_registry_password | default('password') }}"
__huddoboards_image_tag:                     "{{ huddoboards_image_tag | default('2023-07-04') }}"
__huddoboards_chart_name:                    "{{ huddoboards_chart_name | default('huddo-boards-cp-1.1.0.tgz') }}"
__huddoboards_chart_location:                "{{ huddoboards_chart_location | default('https://docs.huddo.com/assets/config/kubernetes') }}"

__network_host:                              "{{ network_host | default('_site_') }}"
__download_location:                         "{{ component_pack_download_location | default('http://localhost:8000') }}"

__helmbuilds_folder:                         "{{ __extraction_folder }}/microservices_connections/hybridcloud/helmbuilds"
__support_folder:                            "{{ __extraction_folder }}/microservices_connections/hybridcloud/support"

__helm_command:                              "{{ helm_command | default('install') }}"

__skip_pod_checks:                           "{{ skip_pod_checks | default(true) |lower }}"

__setup_images_bin:                          "{{ __support_folder }}/setupImages.sh"

__credentials_name:                          "{{ credentials_name | default('myregkey') }}"
__huddoboards_credentials_name:               "{{ huddoboards_credentials_name | default('huddoboardsregkey') }}"
__default_namespace:                         "{{ default_namespace | default('connections') }}"

__ingress_multi_domain_enabled:              "{{ ingress_multi_domain_enabled | default(false) |lower }}"

__msteams_tenant_id:                         "{{ integrations_msteams_tenant_id | default('changeme') }}"
__msteams_client_id:                         "{{ integrations_msteams_client_id | default('changeme') }}"
__msteams_client_secret:                     "{{ integrations_msteams_client_secret | default('changeme') }}"
__msteams_auth_schema:                       "{{ integrations_msteams_auth_schema | default('0') }}"

__ce_on_prem:                                "{{ ce_on_prem | default('false') }}"
__ic_admin_username:                         "{{ was_username | default('wasadmin') }}"
__ic_admin_password:                         "{{ was_password | default('password') }}"
__frontend_fqdn:                             "{{ frontend_fqdn | default(localhost) }}"
__ic_internal:                               "{{ ic_internal | default('localhost') }}"
__k8s_master_ip:                             "{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}"
__master_ip:                                 "{{ load_balancer_dns | default( __k8s_master_ip ) }}"
__es_ca_password:                            "{{ es_ca_password | default('password') }}"
__es_key_password:                           "{{ es_key_password | default('password') }}"
__redis_secret:                              "{{ redis_secret | default('password') }}"
__search_secret:                             "{{ search_secret | default('password') }}"
__solr_secret:                               "{{ solr_secret | default('password') }}"
__skip_configure_redis:                      "{{ skip_configure_redis | default('false') }}"
__force_regenerate_certs:                    "{{ force_regenerate_certs | default('false') }}"

__nfsMasterAddress:                          "{{ nfsMasterAddress | default( hostvars[groups['nfs_servers'][0]]['ansible_default_ipv4']['address'] ) }}"
__persistentVolumePath:                      "{{ persistentVolumePath | default('pv-connections') }}"
__customizer_js_files_mount:                 "/{{ __persistentVolumePath }}/customizations"
__customizer_huddo_extension:                "{{ __persistentVolumePath }}/customizations/boards-extensions"
__connections_volumes:                       "{{ __ansible_cache_charts }}/connections-volumes.yml"

__bootstrap_install_env:                     "{{ __ansible_cache_charts }}/bootstrap.yml"

__connections_env_install_env:               "{{  __ansible_cache_charts }}/connections-env.yml"

__infrastructure_env:                        "{{ __ansible_cache_charts }}/infrastructure.yml"

__customizer_env:                            "{{ __ansible_cache_charts }}/customizer.yml"
__customizer_js_files:                       "{{ __support_folder }}/customizer"
__customizer_js_files_dest:                  "{{ __nfsMasterAddress }}:/{{ __persistentVolumePath }}/customizations"
__customizer_helloworld_js_files:            "files/helloWorld.user.js"
__customizer_helloworld_js_dest:             "{{ __customizer_js_files_mount }}/helloWorld/"
__customizer_share_msteams_js_files:         "files/connections-teams-share-extension-8.0.js"
__customizer_share_msteam_js_dest:           "{{ __customizer_js_files_mount }}/share-extensions/ms-teams/"

__elasticsearch_env:                         "{{ __ansible_cache_charts }}/elasticsearch.yml"

__om_max_conc_users:                         "{{ om_max_conc_users | default(50) }}"
__orientme_env:                              "{{ __ansible_cache_charts }}/orientme.yml"

__cnxingress_env:                            "{{ __ansible_cache_charts }}/cnxingress.yml"

__cnxingressonly_env:                        "{{ __ansible_cache_charts }}/communityingress.yml"

__teams_env:                                 "{{ __ansible_cache_charts }}/teams.yml"

__tailored_exp_env:                          "{{ __ansible_cache_charts }}/tailoredexperience.yml"

__sanity_env:                                "{{ __ansible_cache_charts }}/sanity.yml"

__sanity_watcher_env:                        "{{ __ansible_cache_charts }}/sanity-watcher.yml"

__elasticstack_env:                          "{{ __ansible_cache_charts }}/elasticstack.yml"
__elasticstack7_env:                         "{{ __ansible_cache_charts }}/elasticstack7.yml"

__kudos_boards_template:                     "helmvars/kudosboards.yml.j2"
__kudos_boards_destination:                  "{{ __ansible_cache_charts }}/kudosboards.yml"
__kudos_boards_licence:                      "{{ kudos_boards_licence | default('IaXamMTLbNFetqC1lPBmvIZJfCW6RRk0f7kFgth/XqtdxEpvouMdpIP0Q2MHcs72gEtO5250NcjThmPNIKuO92jzGv5KJ8Mv1mvO2fOvnC8XIeyF5RtLs03sJoZV1PpgIwcSkucC4DM5828a38XTaCKiei3drEmfdvVj8Il2TO1yIVreX//jzCI3UMam8HcloI6Wi+L0RvapLeYr3rXsvCfjn6j/dFEjbtXHz1kSigK9wa5ZFAIbQMj+ARbPNxTqqHFoNOoLq0xPEtmm9+9iVqSkezTXf2FOFaPQR61RlA/+nbi/C/HrhOZX3DjS8ysSCMAIWMrfV4PZMWTqHZ7RCQ==|CVP+ZwwFB+kH0+36woeUYp8sdsuGdbRzl9yeElfyPAF0dnBBOqQG91LpEWvAp59Yb/nOTs9AD+xl4BlQu4yT0ElIuJ/ZvjYgjxPSLPlEmdLOarrL2500RVBWW7ASFz79R18OPUsZK0glXnL3YUtFcBWlLIc6W6nn6h1AtVV//tXaGMq3nXBSvdx06ah0OTa3rRXSe7O+rrQDvZv8uWHy4bCkT9GLJeTXU3rU1xyM/F76tTleqnttUQ1TzDnLSxh+GaYiK4q1dVLm/30kby0VCHerdp/0Yinbchk7ThKdUdKzYOpvJ5h1WGmooOJI71XrTmSS+SrTNsguj0VjNB2UeQ==|Y6VcGyyxrZ/W7A0nIj57NURkAHjNUPMdPdDQsHYkV8SuRgr1fmoEBJxF2ACWCpsGWFJEoWcp57nvCkV3icBD4zy/DFQZkLVhFojkWHawIdjy/KlQQJDJ3Ifn/l6AYoiRAQ0ajII+pKMbzk7E9BbRbSD+Yn6GDv2qYThwlDd1UbI7R5Em3LL0mdBXB4HnBFUztDl1dcyzjsqc36w672qGlJlIroAypzNMtic44qaq57CUlsgEcF/QzNg4PElE7AG0aWHELHdopvO1ZOCMZxzWDiXUak7NBG5pP4CEfP2UUgc/EdkY2K04kQIyJ13yWp5d7YF8bDIhsVDANjQP2c5HNg==')}}"
__huddo_boards_licence:                      "{{ huddo_boards_licence | default(__kudos_boards_licence) }}"
__kudos_reg_destination:                     "{{ __dmgr_bin_dir }}/register_kudosboards"
__kudos_reg_template:                        "register-kudosboards.j2"

__outlook_addin_template:                    "helmvars/outlook-addin.yml.j2"
__outlook_addin_destination:                 "{{ __ansible_cache_charts }}/outlook-addin.yml"
__profile_name:                              "{{ profile_name | default('Dmgr01') }}"
__was_install_location:                      "{{ was_install_location  | default('/opt/IBM/WebSphere/AppServer') }}"
__default_nodename:                          "{{ inventory_hostname_short }}-node"
__was_nodename:                              "{{ was_nodename | default( __default_nodename ) }}"
__was_username:                              "{{ was_username }}"
__was_password:                              "{{ was_password }}"
__dmgr_soap_port:                            "{{ dmgr_soap_port | default('8879')}}"
__dmgr_bin_dir:                              "{{ __was_install_location }}/profiles/{{ __profile_name }}/bin"
__outlook_reg_destination:                   "{{ __dmgr_bin_dir }}/register_outlook_addin"
__outlook_reg_template:                      "register-outlook-addin.j2"

__ingress_metrics_per_host:                  "{{ ingress_metrics_per_host | default('false') }}"
__controller_http_node_port:                 "{{ controller_http_node_port | default('32080') }}"
__controller_https_node_port:                "{{ controller_https_node_port | default('32443') }}"
__communityingress_env_vanilla:              "controller.stats.enabled=true,--enable-metrics=true,prometheus.create=true,prometheus.port=9913,-enable-prometheus-metrics=true,controller.service.type=NodePort,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},--metrics_per_host={{ __ingress_metrics_per_host }}"
__communityingress_env_eks_os:               "controller.stats.enabled=true,--enable-metrics=true,prometheus.create=true,prometheus.port=9913,-enable-prometheus-metrics=true,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},--metrics_per_host={{ __ingress_metrics_per_host }}"
__communitying_ind_env_vanilla:              "controller.service.type=NodePort,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},defaultBackend.enabled=true,controller.healthStatus=true,controller.healthCheckPath=\"/healthz\",controller.livenessProbe.timeoutSeconds=60,controller.readinessProbe.timeoutSeconds=60"
__communitying_ind_env_eks_os:               "controller.service.type=NodePort,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},defaultBackend.enabled=true,controller.healthStatus=true,controller.healthCheckPath=\"/healthz\",controller.livenessProbe.timeoutSeconds=60,controller.readinessProbe.timeoutSeconds=60"

__config_blue_metrics_file:                  "{{ config_blue_metrics_file | default('config_blue_metrics.py') }}"
__config_blue_metrics_bin:                   "/tmp/config_blue_metrics.py"
__config_blue_metrics_cmd:                   "{{ __config_blue_metrics_bin }} --skipSslCertCheck true --pinkhost {{ __master_ip }} --namespace {{ __default_namespace }}"
__elasticsearch_default_version:              "{{ elasticsearch_default_version | default('7') }}"
__elasticsearch_default_port:                "{{ elasticsearch_default_port | default('30098') }}"
__es_certs_dir_temp:                         "/tmp/es_certs"
__es_certs_dir:                              "/opt/IBM/certs"
__es_merge_template:                         "merge-es-certificates-to-keystore.j2"
__es_merge_destination:                      "{{ __dmgr_bin_dir }}/merge_es_certificates_to_keystore"
__es_metrics_enable_template:                "enable-es-for-metrics.j2"
__es_metrics_enable_destination:             "{{ __dmgr_bin_dir }}/enable_es_for_metrics"
__elasticsearch_replica_count:               "{{ elasticsearch_replicaset | default('3') }}"

__connections_admin:                         "{{ connections_admin | default('jjones1') }}"
__connections_admin_password:                "{{ connections_admin_password | default('password') }}"

__helm2_ingress_chart:                       "{{ 'ingress-nginx-3.9.0.tgz' }}"
__helm2_ingress_url:                         "{{ __download_location.split('/')[0] }}/{{ __helm2_packages_dir }}/{{ __helm2_ingress_chart }}"

__outlook_tenant:                            "{{ outlook_tenant | default(' ') }}"
__outlook_mt_auth_url:                       "{{ outlook_mt_auth_url | default('') }}"

__setup_opensearch:                          "{{ setup_opensearch | default(true) |lower }}"
__opensearch_master_env:                     "{{ __ansible_cache_charts }}/opensearch_master.yml"
__opensearch_data_env:                       "{{ __ansible_cache_charts }}/opensearch_data.yml"
__opensearch_client_env:                     "{{ __ansible_cache_charts }}/opensearch_client.yml"
__opensearch_replica_count:                  "{{ opensearch_replicaset | default('3') }}"
__opensearch_cluster_name:                   "{{ opensearch_cluster_name | default('opensearch-cluster') }}"
__opensearch_default_port:                   "{{ opensearch_default_port | default('30099') }}"
__opensearch_ca_password:                    "{{ opensearch_ca_password | default('password') }}"
__opensearch_key_password:                   "{{ opensearch_key_password | default('password') }}"
__opensearch_merge_template:                 "merge-opensearch-certificates-to-keystore.j2"
__opensearchstack_env:                       "{{ __ansible_cache_charts }}/opensearchstack.yml"
__setup_opensearchstack:                     "{{ setup_opensearchstack | default(false) |lower }}"
__opensearch_dashboard_username:             "{{ opensearch_dashboard_username | default('admin') }}"
__opensearch_dashboard_password:             "{{ opensearch_dashboard_password | default('password') }}"
