- name:                  "Verify if migrations are already done"
  stat:
    path:                "{{ __success_file }}"
  register:              migrations_already_done

- name:                  Clean up installation folder(s)
  file:
    path:                "{{ __extraction_folder }}"
    state:               absent
  when:
    - (not migrations_already_done.stat.exists) or (__cnx_force_repopulation |bool )

- name:                  Create installation folder
  file:
    path:                "{{ __extraction_folder }}"
    state:               directory
  when:
    - (not migrations_already_done.stat.exists) or (__cnx_force_repopulation |bool )


- name:                  Download and unzip installation "http://{{ __download_location}}/{{ __package_name }}" to the {{ __extraction_folder }}
  unarchive:
    src:                 "http://{{ __download_location }}/{{ __package_name }}"
    dest:                "{{ __extraction_folder }}"
    remote_src:          yes
  when:
    - (not migrations_already_done.stat.exists) or (__cnx_force_repopulation |bool) or (__db_enable_upgrades |bool)
  retries:               3

- name:                  Disable fingerprinting
  command:               authconfig --disablefingerprint --update
  when:
    - not migrations_already_done.stat.exists

- name:                  Stop CNX cluster for database cleanup
  include_role:
    name:                roles/third_party/ibm/wasnd/was-dmgr-stop-cluster
    apply:
      delegate_to:       "{{ dmgr_hostname }}"
      become:            true
      ignore_errors:     yes
  when:                  __cnx_force_repopulation |bool

# Observed lingering connections even after CNX is stopped so do a force application.
- name:                   Force application to disconnect for database cleanup
  shell:                  "db2 force application all"
  become_user:            "{{ __db2_user }}"
  environment:
    DB2INSTANCE:          "{{ __db2_user }}"
    IBM_DB_LIB:           "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:           "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:      "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:       "/home/db2inst1/sqllib/include"
    DB2LIB:               "/home/db2inst1/sqllib/lib"
    DB2_HOME:             "/home/db2inst1/sqllib"
    PATH:                 "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  when:
    - __cnx_force_repopulation |bool
  ignore_errors:         yes

- name:                  Cleanup Databases
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/activities/db2/dropDb.sql"
   - "connections.sql/blogs/db2/dropDb.sql"
   - "connections.sql/dogear/db2/dropDb.sql"
   - "connections.sql/communities/db2/dropDb.sql"
   - "connections.sql/files/db2/dropDb.sql"
   - "connections.sql/forum/db2/dropDb.sql"
   - "connections.sql/homepage/db2/dropDb.sql"
   - "connections.sql/metrics/db2/dropDb.sql"
   - "connections.sql/mobile/db2/dropDb.sql"
   - "connections.sql/profiles/db2/dropDb.sql"
   - "connections.sql/pushnotification/db2/dropDb.sql"
   - "connections.sql/wikis/db2/dropDb.sql"
  when:
    - __cnx_force_repopulation |bool
  ignore_errors:         yes


- name:                  Cleanup IC360 database
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/ic360/db2/dropDb.sql"
  when:
    - __cnx_force_repopulation |bool
    - __db_version == '7.0'
  ignore_errors:         yes

- name:                  Clenaup ICEC database only
  shell:                 "{{ __db2_icec_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/icec/db2/dropDb.sql"
  when:
    - __cnx_force_repopulation |bool
  ignore_errors:         yes

- name:                  "Delete {{ __success_file }} file"
  file:
    path:                "{{ __success_file }}"
    state:               absent
  when:
    - __cnx_force_repopulation |bool

- name:                 "Verify if should proceed with migrations if cleanup was done"
  stat:
    path:                "{{ __success_file }}"
  register:              migrations_already_done

- name:                  Run migrations for everything but ICEC
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0, 1, 2, 3] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/activities/db2/createDb.sql"
   - "connections.sql/activities/db2/appGrants.sql"
   - "connections.sql/blogs/db2/createDb.sql"
   - "connections.sql/blogs/db2/appGrants.sql"
   - "connections.sql/dogear/db2/createDb.sql"
   - "connections.sql/dogear/db2/appGrants.sql"
   - "connections.sql/communities/db2/createDb.sql"
   - "connections.sql/communities/db2/appGrants.sql"
   - "connections.sql/communities/db2/calendar-createDb.sql"
   - "connections.sql/communities/db2/calendar-appGrants.sql"
   - "connections.sql/files/db2/createDb.sql"
   - "connections.sql/files/db2/appGrants.sql"
   - "connections.sql/forum/db2/createDb.sql"
   - "connections.sql/forum/db2/appGrants.sql"
   - "connections.sql/homepage/db2/createDb.sql"
   - "connections.sql/homepage/db2/appGrants.sql"
   - "connections.sql/homepage/db2/initData.sql"
   - "connections.sql/homepage/db2/reorg.sql"
   - "connections.sql/homepage/db2/updateStats.sql"
   - "connections.sql/metrics/db2/createDb.sql"
   - "connections.sql/metrics/db2/appGrants.sql"
   - "connections.sql/mobile/db2/createDb.sql"
   - "connections.sql/mobile/db2/appGrants.sql"
   - "connections.sql/profiles/db2/createDb.sql"
   - "connections.sql/profiles/db2/appGrants.sql"
   - "connections.sql/pushnotification/db2/createDb.sql"
   - "connections.sql/pushnotification/db2/appGrants.sql"
   - "connections.sql/wikis/db2/createDb.sql"
   - "connections.sql/wikis/db2/appGrants.sql"
  when:
    - not migrations_already_done.stat.exists

- name:                  "Verifiy if Sharepoint migration has already run"
  stat:
    path:                "{{ __sharepoint_success_file }}"
  register:              sharepoint_migrations_already_done

- name:                  Run Sharepoint migration for Connections 7
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0, 1, 2, 3] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/homepage/db2/upgrade-60CR4-70.sql"
  when:
    - not sharepoint_migrations_already_done.stat.exists
    - __db_version == '7.0'
    - __db_enable_upgrades |bool

- name:                  "Verifiy if IC360 DB is already created"
  stat:
    path:                "{{ __ic360_success_file }}"
  register:              ic360_migrations_already_done

- name:                  Run migrations for IC360
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0, 1, 2, 3] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/ic360/db2/createDb.sql"
   - "connections.sql/ic360/db2/appGrants.sql"
  when:
    - not ic360_migrations_already_done.stat.exists
    - __db_version == '7.0'

- name:                  Run migrations for ICEC only
  shell:                 "{{ __db2_icec_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/icec/db2/createDb.sql"
   - "connections.sql/icec/db2/appGrants.sql"
  when:
    - not migrations_already_done.stat.exists

- name:                  Run runstats.sql and reorg.sql everywhere
  shell:                 "{{ __db2_migration_cmd }} {{ __installation_folder }}/{{ item }}"
  register:              result
  failed_when:           ( result.rc not in [0, 1, 2, 3] )
  become_user:           "{{ __db2_user }}"
  environment:
    DB2INSTANCE:         "{{ __db2_user }}"
    IBM_DB_LIB:          "/home/db2inst1/sqllib/lib"
    IBM_DB_DIR:          "/home/db2inst1/sqllib"
    LD_LIBRARY_PATH:     "/home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32"
    IBM_DB_INCLUDE:      "/home/db2inst1/sqllib/include"
    DB2LIB:              "/home/db2inst1/sqllib/lib"
    DB2_HOME:            "/home/db2inst1/sqllib"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/gskit/bin:/home/db2inst1/.local/bin:/home/db2inst1/bin"
  with_items:
   - "connections.sql/activities/db2/runstats.sql"
   - "connections.sql/blogs/db2/runstats.sql"
   - "connections.sql/dogear/db2/runstats.sql"
   - "connections.sql/communities/db2/runstats.sql"
   - "connections.sql/forum/db2/runstats.sql"
   - "connections.sql/mobile/db2/runstats.sql"
   - "connections.sql/profiles/db2/runstats.sql"
   - "connections.sql/activities/db2/reorg.sql"
   - "connections.sql/blogs/db2/reorg.sql"
   - "connections.sql/dogear/db2/reorg.sql"
   - "connections.sql/communities/db2/reorg.sql"
   - "connections.sql/files/db2/reorg.sql"
   - "connections.sql/forum/db2/reorg.sql"
   - "connections.sql/homepage/db2/reorg.sql"
   - "connections.sql/metrics/db2/reorg.sql"
   - "connections.sql/mobile/db2/reorg.sql"
   - "connections.sql/profiles/db2/reorg.sql"
   - "connections.sql/pushnotification/db2/reorg.sql"
   - "connections.sql/wikis/db2/reorg.sql"
  when:
    - migrations_already_done.stat.exists |bool

- name:                  "Create {{ __success_file }} file"
  file:
    path:                "{{ __success_file }}"
    state:               touch

- name:                  "Create {{ __ic360_success_file }} file"
  file:
    path:                "{{ __ic360_success_file }}"
    state:               touch

- name:                  "Create {{ __sharepoint_success_file }} file"
  file:
    path:                "{{ __sharepoint_success_file }}"
    state:               touch
