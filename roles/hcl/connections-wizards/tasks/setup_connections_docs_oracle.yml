- name:                  "Delete {{ __ora_docs_success_file }} file"
  file:
    path:                "{{ __ora_docs_success_file }}"
    state:               absent
  when:
    - __cnx_docs_force_repopulation |bool

- name:                 "Verify if migrations are already done"
  stat:
    path:                "{{ __ora_docs_success_file }}"
  register:              docs_migrations_already_done

- name:                  Clean up installation folder(s)
  file:
    path:                "{{ __docs_extraction_folder }}"
    state:               absent
  when:
    - not docs_migrations_already_done.stat.exists

- name:                  Create installation folder
  file:
    path:                "{{ __docs_extraction_folder }}"
    state:               directory
  when:
    - not docs_migrations_already_done.stat.exists

- name:                  Download and unzip installation {{ __docs_package_name }} to the {{ __docs_extraction_folder }}
  unarchive:
    src:                 "{{ __docs_download_location }}/{{ __docs_package_name }}"
    dest:                "{{ __docs_extraction_folder }}"
    remote_src:          yes
  when:
    - not docs_migrations_already_done.stat.exists

- name:                  Disable fingerprinting
  command:               authconfig --disablefingerprint --update
  when:
    - not docs_migrations_already_done.stat.exists

- name:                  Cleanup Docs database
  shell:                 "chdir={{ __docs_installation_folder }}/oracle sh {{ item }}"
  become_user:           "oracle"
  environment:
    ORACLE_HOME:         "{{ __dbw_oracle_home }}"
    ORACLE_SID:          "{{ __dbw_oracle_sid }}"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/oracle/.local/bin:/home/oracle/bin:{{ __dbw_oracle_home }}/bin"
  with_items:
   - "dropDb.sh"
  when:
    - __cnx_docs_force_repopulation |bool
  ignore_errors:         yes

- name:                 "Verify if should proceed with migrations if cleanup was done"
  stat:
    path:                "{{ __ora_docs_success_file }}"
  register:              docs_migrations_already_done

- name:                  Create Docs database and update schema
  shell:                 "chdir={{ __docs_installation_folder }}/oracle echo {{ __dbw_oracle_password }} | sh {{ item }} {{ __dbw_oracle_password }}"
  become_user:           "oracle"
  environment:
    ORACLE_HOME:         "{{ __dbw_oracle_home }}"
    ORACLE_SID:          "{{ __dbw_oracle_sid }}"
    PATH:                "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/oracle/.local/bin:/home/oracle/bin:{{ __dbw_oracle_home }}/bin"
  with_items:
   - "createDb.sh"
   - "updateDBSchema.sh"
  when:
    - not docs_migrations_already_done.stat.exists

- name:                  "Create {{ __ora_docs_success_file }} file"
  file:
    path:                "{{ __ora_docs_success_file }}"
    state:               touch
