---
- name:              "Get the installation ID"
  shell:             cat "{{ __cnx_install_location }}/bin/uninstall-launcher.sh" | grep "Build:" |  awk {'print $3'}
  register:          cnx_uninstall_version

- debug: var=cnx_uninstall_version.stdout
  run_once: true

- name:              Encode Password XOR
  shell:             "echo \"xpw={{ was_password }}\" > {{__logs_dir}}/xor.props && {{__was_install_location}}/bin/PropFilePasswordEncoder.sh {{__logs_dir}}/xor.props xpw > /dev/null && cat {{__logs_dir}}/xor.props | awk -F= '{ printf $2\"=\"}'"
  register:          __xor_encoded_password
  changed_when:      ( __xor_encoded_password.rc == 0)

- name:              Encode WAS Password
  command:           "{{ __iim_install_location }}/eclipse/tools/imutilsc encryptString {{ was_password }} -silent -noSplash"
  register:          __was_encoded_password
  changed_when:      ( __was_encoded_password.rc == 0)

- name:              Generate Response file {{ __rsp_uninstall_file }} from {{ __tpl_uninstall_file }}
  template:
    src:             "{{ __tpl_uninstall_file }}"
    dest:            "{{ __rsp_uninstall_file }}"

- name:              Disable Repository on Installation Manager
  replace:
    path:            /var/ibm/InstallationManager/.settings/com.ibm.cic.agent.core.prefs
    regexp:          '(\s*)RepositoryIsOpen=true(\s*)'
    replace:         '\1RepositoryIsOpen=false\2'
    backup:          yes
  ignore_errors:     true

- name:              Uninstall Connections Software
  shell: |
    mkdir -p /opt/IBM/CTemp
    export IATEMPDIR=/opt/IBM/CTemp
    export CHECK_DISK_SPACE=OFF
    {{ __iim_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ __log_uninstall_file }} input {{ __rsp_uninstall_file }}
  environment:
    IATEMPDIR: "/opt/IBM/CTemp"
  register:          cout

- name:              Remove Connections installation folder
  file:
    state:           absent
    path:            "{{ item }}"
  with_items:
   - "{{ __cnx_install_location }}"

- name:              Remove Connections data on DMGR
  shell:             "rm -rf {{ item }}"
  with_items:
   - "{{ __cnx_shared_area }}/*"
   - "{{ __cnx_message_store }}/*"
   - "{{ __cell_location }}/registry.xml"
   - "{{ __lcc_location }}"
   - "{{ __was_install_location }}/profiles/{{ __app_profile_name }}/temp"
   - "{{ __was_install_location }}/profiles/{{ __app_profile_name }}/wstemp"
   - "{{ __dmgr_bin_dir }}/*.py"

- name:              Remove temp folders on WAS nodes
  shell:             "rm -rf {{ __was_install_location }}/profiles/{{ __app_profile_name }}/*temp"
  delegate_to:       "{{ item }}"
  with_items:        "{{ groups['was_servers'] }}"
