---
- name:               Verify if iFix {{ ifix_apar }} is already installed
  stat:
    path:             "{{ __ifix_install_success_file }}"
  register:           ifix_already_installed

- name:               Run the iFix install for {{ ifix_apar }}
  shell:
    chdir:            "{{ __cnx_install_location }}/updateInstaller/HCL_Connections_Install/tools/updateInstaller"
    cmd:              "./updateSilent.sh -installDir {{ __cnx_install_location }} -fix -fixDir {{ __cnx_install_location }}/updateInstaller/fixes -install -fixes {{ ifix_apar }} -wasUserId {{ was_username }} -wasPassword {{ was_password }} -featureCustomizationBackedUp {{ __cnx_ifix_backup }}"
  environment:
    WAS_HOME:         "{{ __was_install_location }}"
  become:             true
  when:
    - not ifix_already_installed.stat.exists
  register:           ifix_install_performed

- name:               Check updateInstaller stdout for success message
  debug:
    var:              ifix_install_performed.stdout_lines
  when:
    - not ifix_already_installed.stat.exists and ifix_install_performed is defined
  failed_when:        "'Fix installation completed successfully' not in ifix_install_performed.stdout"
  register:           ifix_success_message_found

- name:               "Create {{ __ifix_install_success_file }} file"
  file:
    path:             "{{ __ifix_install_success_file }}"
    state:            touch
  when:
    - ifix_install_performed is defined and ifix_success_message_found is not skipped
