- name:               Verify if Docs Editor Proxy is already installed
  stat:
    path:             "{{ __editor_proxy_install_success_file }}"
  register:           editor_proxy_already_installed

- name:               Run the IHS Plugins updates script bundled in the Docs Editor Proxy installer
  shell:
    chdir:            "{{ __docs_editor_install_location }}/proxy/installer"
    cmd:              "./update_webserver.sh -wasadminID {{ was_username }} -wasadminPW {{ was_password }} -acceptLicense"
  become:             true
  when:
    - editor_proxy_already_installed.stat.exists |bool
    - ansible_distribution != "RedHat"
  register:           update_webserver_performed

- name:               Run the IHS Plugins updates script bundled in the Docs Editor Proxy installer
  expect:
    chdir:            "{{ __docs_editor_install_location }}/proxy/installer"
    command:          "./update_webserver.sh -wasadminID {{ was_username }} -wasadminPW {{ was_password }} -acceptLicense"
    responses:
      (.*)If this host is already registered as a job manager target(.*): ""
    timeout:           300
  async:               300
  poll:                5
  become:             true
  when:
    - editor_proxy_already_installed.stat.exists |bool
    - ansible_distribution == "RedHat"
  register:           update_webserver_performed

- name:               Search for success message in install log
  become:             yes
  shell:              "grep -i '{{ __install_success_message }}' {{ __docs_editor_install_location }}/proxy/logs/proxy_update_webserver.log"
  register:           update_webserver_success_message_found
  failed_when:        update_webserver_success_message_found.stdout|length == 0
  when:               update_webserver_performed is not skipped

- name:                 Create temporary folder
  file:
    path:               "/tmp/wct_generated_plugins_docs_{{  hostvars[item]['inventory_hostname_short'] }}"
    state:              directory
  delegate_to:          "{{ groups['dmgr'][0] }}"
  with_items:           "{{ groups['ihs_servers'] }}"

- name:                 Copy each plugin-cfg.xml to their corresponding IHS server
  copy:
    src:                "{{ __was_install_location }}/profiles/{{ __dmgr_profile_name }}/config/cells/ConnectionsCell/nodes/{{ hostvars[item]['inventory_hostname_short'] }}-node/servers/{{  hostvars[item]['inventory_hostname_short'] }}/plugin-cfg.xml"
    dest:               "/tmp/wct_generated_plugins_docs_{{  hostvars[item]['inventory_hostname_short'] }}/"
    remote_src:         yes
  delegate_to:          "{{ groups['dmgr'][0] }}"
  with_items:           "{{ groups['ihs_servers'] }}"
