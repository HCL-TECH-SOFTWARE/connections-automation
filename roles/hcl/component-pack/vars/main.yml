---
__ansible_cache:                             "/tmp/k8s_ansible"
__sudo_user:                                 "{{ kubectl_user | default( ansible_env['SUDO_USER'] ) }}"
__ansible_cache_charts:                      "/home/{{ __sudo_user }}/generated_charts"

__enable_pod_auto_scaling:                   "{{ enable_pod_auto_scaling | default(true) |lower }}"

__skip_connections_integration:              "{{ skip_connections_integration | default(false) }}"

__setup_installation:                        "{{ setup_installation | default(true) |lower }}"
__setup_images:                              "{{ setup_images | default(true) |lower }}"
__setup_credentials:                         "{{ setup_credentials | default(true) |lower }}"
__setup_connections_volumes:                 "{{ setup_connections_volumes | default(true) |lower }}"
__setup_psp:                                 "{{ setup_psp | default(true) |lower }}"
__setup_bootstrap:                           "{{ setup_bootstrap | default(true) |lower }}"
__setup_connections_env:                     "{{ setup_connections_env | default(true) |lower }}"
__setup_infrastructure:                      "{{ setup_infrastructure | default(true) |lower }}"
__setup_customizer:                          "{{ setup_customizer | default(true) |lower }}"
__setup_elasticsearch:                       "{{ setup_elasticsearch | default(false) |lower }}"
__setup_elasticsearch7:                      "{{ setup_elasticsearch7 | default(true) |lower }}"
__setup_ingress:                             "{{ setup_ingress | default(false) |lower }}"
__setup_community_ingress:                   "{{ setup_community_ingress | default(true) |lower }}"
__setup_teams:                               "{{ setup_teams | default(true) |lower }}"
__setup_tailored_exp:                        "{{ setup_tailored_exp | default(true) |lower }}"
__setup_orientme:                            "{{ setup_orientme | default(true) |lower }}"
__setup_dashboards:                          "{{ setup_dashboards | default(false) |lower }}"
__setup_sanity:                              "{{ setup_sanity | default(true) |lower }}"
__setup_kudosboards:                         "{{ setup_kudosboards | default(true) |lower }}"
__setup_elasticstack:                        "{{ setup_elasticstack | default(false) |lower }}"
__setup_elasticstack7:                       "{{ setup_elasticstack7 | default(false) |lower }}"
__setup_outlook_addin:                       "{{ setup_outlook_addin | default(true) |lower }}"
__enable_es_metrics:                         "{{ enable_es_metrics | default(true) |lower }}"
__enable_gk_flags:                           "{{ enable_gk_flags | default(true) |lower }}"
__setup_ms_teams_extensions:                 "{{ setup_ms_teams_extensions | default(true) |lower }}"

__replica_count:                             "{{ cp_replica_count | default(1) }}"

__docker_registry_url:                       "{{ docker_registry_url | default('localhost:5000') }}"
__docker_registry_username:                  "{{ docker_registry_username | default('admin') }}"
__docker_registry_password:                  "{{ docker_registry_password | default('password') }}"

__network_host:                              "{{ network_host | default('_site_') }}"
__download_location:                         "{{ component_pack_download_location | default('http://localhost:8000') }}"
__package_name:                              "{{ component_pack_package_name | default('hybridcloud_latest.zip') }}"
__extraction_folder:                         "{{ component_pack_extraction_folder | default('/opt/hcl-cnx-component-pack') }}"

__helmbuilds_folder:                         "{{ __extraction_folder }}/microservices_connections/hybridcloud/helmbuilds"
__support_folder:                            "{{ __extraction_folder }}/microservices_connections/hybridcloud/support"

__helm_command:                              "{{ helm_command | default('install') }}"

__skip_pod_checks:                           "{{ skip_pod_checks | default(true) |lower }}"

__setup_images_bin:                          "{{ __support_folder }}/setupImages.sh"

__dashboard_admin_yaml:                      "{{ __support_folder }}/dashboard-admin.yaml"

__credentials_name:                          "{{ credentials_name | default('myregkey') }}"
__default_namespace:                         "{{ default_namespace | default('connections') }}"

__ingress_multi_domain_enabled:              "{{ ingress_multi_domain_enabled | default(true) |lower }}"

__msteams_tenant_id:                         "{{ integrations_msteams_tenant_id | default('changeme') }}"
__msteams_client_id:                         "{{ integrations_msteams_client_id | default('changeme') }}"
__msteams_client_secret:                     "{{ integrations_msteams_client_secret | default('changeme') }}"
__msteams_auth_schema:                       "{{ integrations_msteams_auth_schema | default('0') }}"

__ce_on_prem:                                "{{ ce_on_prem | default('false') }}" 
__ic_admin_username:                         "{{ was_username | default('wasadmin') }}"
__ic_admin_password:                         "{{ was_password | default('password') }}"
__frontend_fqdn:                             "{{ frontend_fqdn | default(localhost) }}"
__ic_internal:                               "{{ ic_internal | default('localhost') }}"
__k8s_master_ip:                             "{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}"
__master_ip:                                 "{{ load_balancer_dns | default( __k8s_master_ip ) }}"
__es_ca_password:                            "{{ es_ca_password | default('password') }}"
__es_key_password:                           "{{ es_key_password | default('password') }}"
__redis_secret:                              "{{ redis_secret | default('password') }}"
__search_secret:                             "{{ search_secret | default('password') }}"
__solr_secret:                               "{{ solr_secret | default('password') }}"
__skip_configure_redis:                      "{{ skip_configure_redis | default('false') }}"

__nfsMasterAddress:                          "{{ nfsMasterAddress | default( hostvars[groups['nfs_servers'][0]]['ansible_default_ipv4']['address'] ) }}"
__persistentVolumePath:                      "{{ persistentVolumePath | default('pv-connections') }}"
#__connections_volumes:                       "nfs.server={{ __nfsMasterAddress }},persistentVolumePath=/{{ __persistentVolumePath }}"
__connections_volumes:                       "{{ __ansible_cache_charts }}/connections-volumes.yml"

__bootstrap_install_env:                     "{{ __ansible_cache_charts }}/bootstrap.yml"
#__bootstrap_install_env:        "env.set_ic_admin_user={{ __ic_admin_username }},env.set_ic_admin_password={{ __ic_admin_password }},env.set_ic_internal={{ __ic_internal }},env.set_master_ip={{ __master_ip }},env.set_elasticsearch_ca_password={{ __es_ca_password }},env.set_elasticsearch_key_password={{ __es_key_password }},env.set_redis_secret={{ __redis_secret }},env.set_search_secret={{ __search_secret }},env.set_solr_secret={{ __solr_secret }},env.skip_configure_redis={{ __skip_configure_redis }},image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"

__connections_env_install_env:               "{{  __ansible_cache_charts }}/connections-env.yml"
#__connections_env_install_env:               "onPrem={{ __ce_on_prem }},ic.host={{ __frontend_fqdn }},ic.internal={{ __ic_internal }},createSecret=false,ic.interserviceOpengraphPort=443,ic.interserviceConnectionsPort=443,ic.interserviceScheme=https,integrations.msteams.enabled={{ __setup_teams }},integrations.msteams.tenant.id={{ __msteams_tenant_id }},integrations.msteams.client.id={{ __msteams_client_id }},integrations.msteams.client.secret={{ __msteams_client_secret }},integrations.msteams.auth.schema={{ __msteams_auth_schema}},replicaCount={{ __replica_count }}"

__infrastructure_env:                        "{{ __ansible_cache_charts }}/infrastructure.yml" 
#__infrastructure_env:                        "global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,mongodb.createSecret=false,appregistry-service.deploymentType=hybrid_cloud,replicaCount={{ __replica_count }}"

__customizer_env:                            "{{ __ansible_cache_charts }}/customizer.yml"
#__customizer_env:                            "image.repository={{ __docker_registry_url }}/connections,deploymentType=hybrid_cloud,replicaCount={{ __replica_count }}"
__customizer_js_files:                       "{{ __support_folder }}/customizer"
__customizer_js_files_dest:                  "{{ __nfsMasterAddress }}:/{{ __persistentVolumePath }}/customizations"
__customizer_js_files_mount:                 "/mnt/customizations"
__customizer_helloworld_js_files:            "files/helloWorld.user.js"
__customizer_helloworld_js_dest:             "{{ __customizer_js_files_mount }}/helloWorld/" 

__elasticsearch_env:                         "{{ __ansible_cache_charts }}/elasticsearch.yml"
#__elasticsearch_env:                         "image.repository={{ __docker_registry_url }}/connections,nodeAffinityRequired=true,createSecret=false"

__om_max_conc_users:                         "{{ om_max_conc_users | default(50) }}"
__orientme_env:                              "{{ __ansible_cache_charts }}/orientme.yml"
#__orientme_env:                              "global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,orient-web-client.service.nodePort=30001,itm-services.service.nodePort=31100,mail-service.service.nodePort=32721,community-suggestions.service.nodePort=32200,deploymentType=hybrid_cloud,orient-indexing-service.indexing.solr=false,orient-indexing-service.indexing.elasticsearch=true,orient-retrieval-service.retrieval.elasticsearch=true,replicaCount={{ __replica_count }}"

__cnxingress_env:                            "{{ __ansible_cache_charts }}/cnxingress.yml"
#__cnxingress_env:               "multiDomainEnabled={{ __ingress_multi_domain_enabled  }},ingress.hosts.domain={{ hostvars[inventory_hostname]['ansible_domain'] }},ingress.hosts.publicdomain={{ frontend_domain }},global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"

__cnxingressonly_env:                        "{{ __ansible_cache_charts }}/communityingress.yml"
#__cnxingressonly_env:                        "multiDomainEnabled={{ __ingress_multi_domain_enabled  }},ingress.hosts.domain={{ hostvars[inventory_hostname]['ansible_domain'] }},ingress.hosts.publicdomain={{ frontend_domain }},global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }},controller.service.type=ClusterIP,setIngressOnly=false"

__teams_env:                                 "{{ __ansible_cache_charts }}/teams.yml"
#__teams_env:                                 "global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"

__tailored_exp_env:                          "{{ __ansible_cache_charts }}/tailoredexperience.yml"
#__tailored_exp_env:                          "global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"

__sanity_env:                                "{{ __ansible_cache_charts }}/sanity.yml"
#__sanity_env:                                "image.repository={{ __docker_registry_url }}/connections,logLevel=info,replicaCount={{ __replica_count }}"
#__sanity_watcher_env:                        "image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"

__elasticstack_env:                          "{{ __ansible_cache_charts }}/elasticstack.yml"
#__elasticstack_env:                          "global.onPrem=true,global.image.repository={{ __docker_registry_url }}/connections,replicaCount={{ __replica_count }}"
__elasticstack7_env:                         "{{ __ansible_cache_charts }}/elasticstack7.yml"

__kudos_boards_template:                     "helmvars/kudosboards.yml.j2"
__kudos_boards_destination:                  "{{ __ansible_cache_charts }}/kudosboards.yml"
__kudos_boards_licence:                      "{{ kudos_boards_licence | default('iRCV+E9WZo+k0JmWRIWpqi+rGOhH266h4Qy8/DQDKEHDt0Sp4o8+x1BXMpjSwHi4fwefzFnmOS2lUVvzf82GhWW31bQB5kNjht7gdRqVucqZiJbyMmyg65zXfsgo3lT5wngJa567AAcuU9I2JIvZOapMWFq+2+yA/71DIR3Ht9TiaNZ9L0y6O5FrTOpvgxc4Sv6ZRUbkYEDczeHyoGuJ9w7gpwfh7/9rqlZo5SpaLMoPyiymBeybiiQCJHwYD7mhcGEiqePHXYhkdWyGNajLMk6b24T1aUTu/5bk23AF3+RuIAyGso7yybTMN1b2e8klS2RzNHRLIBiGqSAe+PS92w==|X++z35P92R0ZyY0zUDIxWQgFtnFtHVBDEGkGmI/XaoRiUKq1fWm21ZgjUBHH/1t/qYduU7pgOFdwMNc3pgE6CG2FnnDEiVhIX28WkNQ6TnzC9KBUwcb4oZ7C9/llfnqrAJ0H4QO+kJiw+8Rl5QqKQuACw/rZbocAnMI39FCZo6CKH0MAghz3aCl3DDVX/QFLkaykA1SeqhQB0RoBQXcEaxmUV4IoQv0MMkesjV0HUaxaSIaNYVf2ybw8EOML1aIMrEUIb6z1hbw4j2vdmNHwDb8tXEHFeJE+UKSTnnry2Qqf6owYnE2S97G73oP4uIaiMkY3FVBe9YwYnCBSuys6Wg==|FLvEVWAlxeyywpzLeOd5U38nac1QhJsKyX+ESSbz9uaYe+cnuIpQDDue57isgBGoLsfFAiFQb2RYsP9LjpGoF24wfUfqu4FZdYMCT2vLYcAp9cvP5BjZyyIVVySxYy1/ewZAZ0A1pL7wxqaopbllv0v7APx7j+SsxlkymmI+rL9GQLwQ51Bfu/oFeVtrBeDjsdxrHucUci7mmCWRvaaK6HtZDx6AO4J5Js9d49rB9EQC0DX6SE4OIYHdBRk32oTzx4LQNYQ1AIgU18cDKtAPvHpi3GRDmf8Pjrg0MNJFOUtFlxOYKcWZuHoKcimkkxbWCdMhTbI4lH0UNCgoVoPD5g==|NcdheR2HAGkJTgtgq0ZF1hsp/nX/yu8zIlOqdhBOj1/wWjAF1SNQ4OkgQEWYBrLqg7T5YcvYQyT8zTvqVd03i2c44m8N7evNAzNzD7Qd3W4ZcUsVMwscoulgJZjQ9iEdX4WdKaDcRkOo9dzeX+7ayRzpBpisRG4taLpuzCfS5sYJHWyumNgVgiDkb50MTNHkMdNHtJVlvnyyHmIhAg0dghBiHLPLaqFoUcmjj3X0H0M2j7+GFVlZGvRVO9xvbkCf6zqRB8D5BIukC61K1in7Hzu+RI22GW6oKuhQWvdxX8J0DhsvXjheWXiYbIpFfw7mxnCJlm9JIpESI93puraSZQ==')}}"
__kudos_reg_destination:                     "{{ __dmgr_bin_dir }}/register_kudosboards"
__kudos_reg_template:                        "register-kudosboards.j2"

__outlook_addin_template:                    "helmvars/outlook-addin.yml.j2"
__outlook_addin_destination:                 "{{ __ansible_cache_charts }}/outlook-addin.yml"
__profile_name:                              "{{ profile_name | default('Dmgr01') }}"
__was_install_location:                      "{{ was_install_location  | default('/opt/IBM/WebSphere/AppServer') }}"
__default_nodename:                          "{{ inventory_hostname_short }}-node"
__was_nodename:                              "{{ was_nodename | default( __default_nodename ) }}"
__was_username:                              "{{ was_username }}"
__was_password:                              "{{ was_password }}"
__dmgr_soap_port:                            "{{ dmgr_soap_port | default('8879')}}"
__dmgr_bin_dir:                              "{{ __was_install_location }}/profiles/{{ __profile_name }}/bin"
__outlook_reg_destination:                   "{{ __dmgr_bin_dir }}/register_outlook_addin"
__outlook_reg_template:                      "register-outlook-addin.j2"

__ingress_metrics_per_host:                  "{{ ingress_metrics_per_host | default('false') }}"
__controller_http_node_port:                 "{{ controller_http_node_port | default('32080') }}"
__controller_https_node_port:                "{{ controller_https_node_port | default('32443') }}"
__communityingress_env_vanilla:              "controller.stats.enabled=true,--enable-metrics=true,prometheus.create=true,prometheus.port=9913,-enable-prometheus-metrics=true,controller.service.type=NodePort,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},--metrics_per_host={{ __ingress_metrics_per_host }}"
__communityingress_env_eks_os:               "controller.stats.enabled=true,--enable-metrics=true,prometheus.create=true,prometheus.port=9913,-enable-prometheus-metrics=true,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},--metrics_per_host={{ __ingress_metrics_per_host }}"
__communitying_ind_env_vanilla:              "controller.service.type=NodePort,controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},defaultBackend.enabled=true,controller.healthStatus=true,controller.healthCheckPath=\"/healthz\",controller.livenessProbe.timeoutSeconds=60,controller.readinessProbe.timeoutSeconds=60"
__communitying_ind_env_eks_os:               "controller.service.nodePorts.http={{ __controller_http_node_port }},controller.service.nodePorts.https={{ __controller_https_node_port }},defaultBackend.enabled=true,controller.healthStatus=true,controller.healthCheckPath=\"/healthz\",controller.livenessProbe.timeoutSeconds=60,controller.readinessProbe.timeoutSeconds=60"

__config_blue_metrics_bin:                   "{{ __support_folder }}/config_blue_metrics.py"
__config_blue_metrics_cmd:                   "{{ __config_blue_metrics_bin }} --skipSslCertCheck true --pinkhost {{ __master_ip }} --namespace {{ __default_namespace }}"
__elasticsearch_default_version:              "{{ elasticsearch_default_version | default('7') }}"
__elasticsearch_default_port:                "{{ elasticsearch_default_port | default('30098') }}"
__es_certs_dir_temp:                         "/tmp/es_certs"
__es_certs_dir:                              "/opt/IBM/certs"
__es_merge_template:                         "merge-es-certificates-to-keystore.j2"
__es_merge_destination:                      "{{ __dmgr_bin_dir }}/merge_es_certificates_to_keystore"
__es_metrics_enable_template:                "enable-es-for-metrics.j2"
__es_metrics_enable_destination:              "{{ __dmgr_bin_dir }}/enable_es_for_metrics"

__connections_admin:                         "{{ connections_admin | default('jjones1') }}"
__connections_admin_password:                "{{ connections_admin_password | default('password') }}"

__helm2_ingress_chart:                       "{{ 'ingress-nginx-3.9.0.tgz' }}"
__helm2_ingress_url:                         "{{ __download_location.split('/')[0] }}/{{ __helm2_packages_dir }}/{{ __helm2_ingress_chart }}"

__outlook_tenant:                            "{{ outlook_tenant | default(' ') }}"
__outlook_mt_auth_url:                       "{{ outlook_mt_auth_url | default('') }}"
