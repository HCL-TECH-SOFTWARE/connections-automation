---
- name:                        Add com.ibm.ws.security.oidc.client.RelyingParty interceptor
  include_role:
    name:                      roles/third_party/ibm/wasnd/was-dmgr-config-interceptor
  vars:
    __trust_interceptor_name:  "com.ibm.ws.security.oidc.client.RelyingParty"
    __trust_interceptor_prop:
      # Note: useJwtFromRequest is set to 'ifPresent' in Azure AD OIDC config
      - { name: "provider_1.useJwtFromRequest", value: "required" }
      - { name: "provider_1.identifier", value: "{{ __msteams_identifier }}" }
      - { name: "provider_1.issuerIdentifier", value: "https://{{ __msteams_login_host }}/{{ __msteams_tenant_id }}/{{ __msteams_login_version }}" }
      - { name: "provider_1.jwkEndpointUrl", value: "https://{{ __msteams_login_host }}/{{ __msteams_tenant_id }}/{{ __msteams_jwk_endpoint }}"}
      - { name: "provider_1.interceptedPathFilter", value: "/profiles/oidc/session" }
      - { name: "provider_1.audiences", value: "ALL_AUDIENCES" }
      - { name: "provider_1.setLtpaCookie", value: "true" }
      - { name: "provider_1.userIdentifier", value: "{{ __msteams_user_identifier }}" }
      - { name: "provider_1.useRealm", value: "defaultWIMFileBasedRealm" }

# not meeded for Azure OIDC config
- name:                        Add the OpenID Connect Relying Party TAI class to com.ibm.websphere.security.InvokeTAIbeforeSSO
  include_role:
    name:                      roles/third_party/ibm/wasnd/was-dmgr-config-sec-custom-prop
  vars:
    __sec_custom_prop:         "com.ibm.websphere.security.InvokeTAIbeforeSSO"
    __sec_custom_prop_value:   ",com.ibm.ws.security.oidc.client.RelyingParty"
    __sec_custom_prop_append:  true

- name:                        Configure the trusted realms to include the JWT issuer
  include_role:
    name:                      roles/third_party/ibm/wasnd/was-dmgr-add-trusted-realms
  vars:
    __trusted_realm_name:      "https://{{ __msteams_login_host }}/{{ __msteams_tenant_id }}/{{ __msteams_login_version }}"

# Note: set azure_interceptor_sign_alias the same as Azure AD OIDC if it will be configured
- name:                        Add root signing certificate of the Microsoft Certificate endpoint to the Default Trust Store
  include_role:
    name:                      roles/third_party/ibm/wasnd/was-dmgr-config-add-cert-truststore
  vars:
    __trust_cert_host:         "{{ __msteams_login_host }}"
    __trust_cert_alias:        "{{ azure_interceptor_sign_alias | default('Azure') }}"

- name:                        Disable com.ibm.websphere.security.disableGetTokenFromMBean
  include_role:
    name:                      roles/third_party/ibm/wasnd/was-dmgr-config-sec-custom-prop
  vars:
    __sec_custom_prop:         "com.ibm.websphere.security.disableGetTokenFromMBean"
    __sec_custom_prop_value:   "{{ __sec_custom_prop_disableGetTokenFromMBean|lower }}"
    __sec_custom_prop_append:  false
    __sec_custom_prop_always_write: true
