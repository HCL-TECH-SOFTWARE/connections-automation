- name:                      Find tailored_exp helm file
  find:
    paths:                   "{{ __helmbuilds_folder }}"
    patterns:                "tailored-exp-*.tgz"
    file_type:               file
  register:                  tailored_exp_tgz

- name:                      Found tailored_exp file
  debug:
    msg:                     "{{ tailored_exp_tgz.files[0].path }}"

- name:                      "Render {{ __tailored_exp_env }}"
  template:
    src:                     "helmvars/tailoredexperience.yml.j2"
    dest:                    "{{ __tailored_exp_env }}"
  become_user:               "{{ __sudo_user }}"

- name:                      Setup tailored_exp
  command:                   "helm upgrade tailored-exp {{ tailored_exp_tgz.files[0].path }} -i -f {{ __tailored_exp_env }} --namespace {{ __default_namespace }} --wait"
  become_user:               "{{ __sudo_user }}"

- name:                      Wait for te-creation-wizard to come up
  shell:                     kubectl wait --namespace {{ __default_namespace }} --for=condition=ready pod --selector=name=te-creation-wizard --timeout=300s
  become_user:               "{{ __sudo_user }}"

- name:                      Check if tailored experience admin portal is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i admin-portal | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"

- name:                      Check if tailored experience community template service is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i community-template-service | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"

- name:                      Check if tailored experience creation wizard is up and running
  shell:                     kubectl get pods -n {{ __default_namespace }} | grep -i te-creation-wizard | grep -i Running
  when:                      not __skip_pod_checks
  become_user:               "{{ __sudo_user }}"
