---
- name:               Verify if MT (IHS) is already updated ({{ __mt_update_ihs_success_file }})
  stat:
    path:             "{{ __mt_update_ihs_success_file }}"
  register:           mt_ihs_already_installed

- name:               Synchronize MT Update installation directory to IHS server temp location
  synchronize:
    src:              "{{ __tmp_dir }}/mt/"
    dest:             "/tmp/mt/"
  delegate_to:        "{{ dmgr_hostname }}"
  become:             false
  when:               not mt_ihs_already_installed.stat.exists

- name:               Copy the files to {{ __tmp_dir }}/mt
  copy:
    src:              "/tmp/mt/"
    dest:             "{{ __tmp_dir }}/mt/"
    remote_src:       yes
  when:               not mt_ihs_already_installed.stat.exists

- name:               Delete MT Update installation directory from temp location
  file:
    path:             "{{ item }}"
    state:            absent
  with_items:
    - "/tmp/mt/"
    - "{{ __tmp_dir }}/mt/install/mtupdate_was.rc"
  when:               not mt_ihs_already_installed.stat.exists

- name:                Run MT Update (IHS), log file {{ __tmp_dir }}/mt/install/mtupdate_ihs.log
  shell: |
     set timeout 300
     ./connections-mt-webserver-update-cli.sh -f config.properties 2>&1 | tee mtupdate_ihs.log
     echo ${PIPESTATUS[0]} > mtupdate_ihs.rc
  args:
      chdir:           "{{ __tmp_dir }}/mt/install"
  become:              true
  register:            mt_update_ihs_performed

- name:                Check install return code
  become:              yes
  shell:               "cat {{ __tmp_dir }}/mt/install/mtupdate_ihs.rc"
  register:            return_code
  failed_when:
    - return_code.stdout != "0"
  when:
    - mt_update_ihs_performed is not skipped

- name:               Search for success message in log
  become:             yes
  shell:              "grep -i 'Updating HCL Connections Webserver configuration to MT completed' {{ __tmp_dir }}/mt/install/mtupdate_ihs.log"
  register:           grep_success_message
  failed_when:        grep_success_message.stdout|length == 0
  when:               not __mt_skip_error_checking|bool and mt_update_ihs_performed is not skipped

- name:               Search for potential errors in log
  become:             yes
  shell:              "grep -i 'error'  {{ __tmp_dir }}/mt/install/mtupdate_ihs.log"
  register:           mt_update_ihs_error_found
  failed_when:        mt_update_ihs_error_found.stdout|length != 0
  when:               not __mt_skip_error_checking|bool and mt_update_ihs_performed is not skipped

- name:               "Create {{ __mt_update_ihs_success_file }} file"
  file:
    path:             "{{ __mt_update_ihs_success_file }}"
    state:            touch
  when:
    - mt_update_ihs_performed is not skipped
