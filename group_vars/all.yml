--- 
# Download location of DB2 and the licence file
db2_download_location: "http://192.168.137.1:8001/"

# Download location of TDI
tdi_download_location: 192.168.137.1:8001/

# Download location of Connections Wizards for DB population
db2_wizards_download_location: 192.168.137.1:8001/

# Download location for IBM Installation manager
iim_repository_url: http://192.168.137.1:8001/

# Download location for IBM WebSphere ND & IBM Java
was_repository_url: http://192.168.137.1:8001/

# Download location of IBM WAS ND Fixpack 18
was_fixes_repository_url: http://192.168.137.1:8001/

# Download location of IBM HTTP Server
ihs_repository_url: http://192.168.137.1:8001/

# Download location of IBM HTTP Server fixpacks
ihs_fixes_repository_url: http://192.168.137.1:8001/

# Download location of HCL Connections Docs 2.0.1
cnx_docs_download_location: http://192.168.137.1:8001/

# Download location for HCL Connections zip file. Used by Connections installation and TDI to get tdisol archive.
cnx_repository_url: 192.168.137.1:8001/

# Folder used for the shared data. If setting up NFS using using automation, it will be created on NFS master and exported, and then mounted by Connections
# installation and used inside response file. 
cnx_shared_area: "/nfs/data/shared"
# Folder used for the WAS Message Store share. If setting up NFS using using automation, it will be created on NFS master and exported, and then mounted by Connections
# installation and used inside response file. 
cnx_message_store: "/nfs/data/messageStores"

# If enabled, installer will figure out inteligently the the version of Connections you are trying to install. Recommended
# to keep it this way. Otherwise, can be overwritten with a specific version if disabled.
cnx_updates_enabled: True

# This username and password are going to be set as administrative for IBM WebSphere ND and used as such accross whenever
# needed.
was_username: wasadmin
was_password: password
#
# This section is used when setting up OpenLDAP, when setting up TDI and when setting up WebSphere.
ldap_server: cnx7-ldap.stoeps.internal
ldap_alias: cnx7-ldap
ldap_repo: LDAP_PRODUCTION1
ldap_bind_user: cn=Admin,dc=cnx,dc=stoeps,dc=internal
ldap_bind_pass: password
ldap_realm: dc=cnx,dc=stoeps,dc=internal
ldap_login_properties: uid;mail
#
dmgr_hostname: cnx7-was.stoeps.internal
was_domainname: .stoeps.internal
domain_name: .stoeps.internal
cnx_domainname: .stoeps.internal
smtp_hostname: localhost
#
ihs_password: password

# The name of at least one IBM HTTP server attached to DMGR prior to installation of Connections. If none web servers with
# this name can be found by Connections installer, some black magic can happen.
cnx_webserver: "cnx7-ihs"

# Address of Haproxy. This is going to be used as an ingress inside httpd.conf for IBM HTTP server to send requests to the
# Kubernetes cluster and Component Pack.
cnx_component_pack_ingress: "cnx7-ihs.stoeps.internal"

# This is basically dynamicHost and the value that will be set there.
cnx_application_ingress: "cnx7-ihs.stoeps.internal"

# uncomment and set this if was_servers and cnx_application_ingress are in different domain
sso_domainname: .stoeps.internal

# Connections admin user. By default it is this one. Doesn't have to exist in the moment of cluster setup.
connections_admin: fakeuser1

cnx_node_list: ['connections1', 'connections2']
cnx_hostname_list: ['connections1.stoeps.internal', 'connections2.stoeps.internal']
ihs_hostname_list: ['ihs1.stoeps.internal', 'ihs2.stoeps.internal']

common_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}
communities_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}
news_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}
widgets_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}
profiles_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}
search_app: { 'cluster_name': 'Infra', 'nodes':['connections1', 'connections2']}

homepage_app: { 'cluster_name': 'Util', 'nodes':['connections1', 'connections2']}
moderation_app: { 'cluster_name': 'Util', 'nodes':['connections1', 'connections2']}
rte_app: { 'cluster_name': 'Util', 'nodes':['connections1', 'connections2']}

activities_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
blogs_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
dogear_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
files_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
forums_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
metrics_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
mobile_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
wikis_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}
ic360_app: { 'cluster_name': 'Apps', 'nodes':['connections1', 'connections2']}

push_app: { 'cluster_name': 'Push', 'nodes':['connections1', 'connections2']}


# Set to true if you want to enable Prometheus JMX exporter and configure WAS to export metrics from one or multiple Connections
# clusters.
enable_prometheus_jmx_exporter: True
# The list of clusters you are exporting, and ports on which you are exporting them. Be careful that ports don't clash with other ports.
connections_jmx_clusters: [{"name":"Apps","port":"8080"}, {"name":"Infra","port":"8081"}, {"name":"Util","port":"8082"}, {"name":"Push","port":"8083"}]

# List of the clusters we are starting by default. In some cases, for example, you don't want to start Push by default or if
# you are not using it.
connections_auto_start_clusters: 'Apps Push Util Infra'

# This is used by WebSphere, Connections and TDI.
db_username: LCUSER
db_password: password
db_hostname: cnx7-db2.stoeps.internal
db_port: 50000
db_jdbc_file: /opt/IBM/db2/V11.1/java
db_type: DB2

# If uncommented (enabled), when running setup-connections-wizards.yml playbook, it would drop your databases and recreate
# them. Use with extreme caution!
#cnx_force_repopulation: True

# If uncommented (enabled), when running setup-connections-wizard.yml playbook, and being already on Connections 6.5.0.1, this would install IC360 database
# and run needed migrations for upgrade to Connections 7. 
#db_enable_upgrades: True

activities_db: { 'server': 'cnx7-db2.stoeps.internal' }
blogs_db: { 'server': 'cnx7-db2.stoeps.internal' }
dogear_db: { 'server': 'cnx7-db2.stoeps.internal' }
communities_db: { 'server': 'cnx7-db2.stoeps.internal' }
files_db: { 'server': 'cnx7-db2.stoeps.internal' }
forums_db: { 'server': 'cnx7-db2.stoeps.internal' }
homepage_db: { 'server': 'cnx7-db2.stoeps.internal' }
metrics_db: { 'server': 'cnx7-db2.stoeps.internal' }
mobile_db: { 'server': 'cnx7-db2.stoeps.internal' }
profiles_db: { 'server': 'cnx7-db2.stoeps.internal' }
push_db: { 'server': 'cnx7-db2.stoeps.internal' }
wikis_db: { 'server': 'cnx7-db2.stoeps.internal' }
icec_db: { 'server': 'cnx7-db2.stoeps.internal' }
ic360_db: { 'server': 'cnx7-db2.stoeps.internal' }

cnx_enable_moderation: false
cnx_enable_invite: true
